[tool:pytest]
# Pytest configuration for PRI testing
minversion = 6.0
addopts = 
    -ra 
    --strict-markers 
    --strict-config 
    --cov=src 
    --cov-report=term-missing 
    --cov-report=html:htmlcov 
    --cov-report=xml
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Custom markers for test organization
markers =
    performance: Performance and regression tests
    security: Security and adversarial tests  
    integration: Integration tests requiring full system
    unit: Unit tests for individual components
    slow: Tests that take longer than 30 seconds
    memory: Memory usage and leak tests
    concurrent: Concurrency and threading tests
    external: Tests requiring external resources
    
# Performance test configuration
performance_timeout = 300  # 5 minutes max for performance tests
performance_memory_limit = 1024  # 1GB memory limit

# Test discovery patterns
norecursedirs = 
    .git 
    .tox 
    dist 
    build 
    south_migrations 
    venv
    __pycache__
    .pytest_cache
    htmlcov

# Warnings configuration
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # Specific warnings to suppress
    ignore:.*Use of .. method is deprecated.*:DeprecationWarning
    ignore:.*distutils.*:DeprecationWarning

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */migrations/*
    */settings/*
    setup.py

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    
    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    
    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ .__main__.:
    
    # Don't complain about abstract methods
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
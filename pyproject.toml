[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "persistent-recursive-intelligence"
version = "0.1.0"
description = "Persistent Recursive Intelligence - AI-powered code analysis and improvement system"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "GusFromSpace", email = "noreply@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
]
dependencies = [
    # Core memory and AI dependencies
    "numpy>=2.2.0",
    "faiss-cpu>=1.7.4",
    "sentence-transformers>=2.2.0",
    
    # API framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    
    # Caching
    "redis>=5.0.0",
    
    # Authentication and security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "slowapi>=0.1.9",
    
    # Monitoring and observability
    "prometheus-client>=0.19.0",
    "psutil>=5.9.0",
    
    # Utilities
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "factory-boy>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/gusfromspace/persistent-recursive-intelligence"
Repository = "https://github.com/gusfromspace/persistent-recursive-intelligence.git"
Issues = "https://github.com/gusfromspace/persistent-recursive-intelligence/issues"

[project.scripts]
mesopredator = "persistent_recursive_intelligence.cli:main"
pri-analyze = "persistent_recursive_intelligence.cli:analyze_command"
pri-fix = "persistent_recursive_intelligence.cli:fix_command"

[tool.setuptools.packages.find]
where = ["src"]
include = ["persistent_recursive_intelligence*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=persistent_recursive_intelligence",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/archive/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | archive
  | examples
  | venv
)/
'''

[tool.isort]
profile = "black"
line_length = 100
src_paths = ["src", "tests"]
skip_glob = ["archive/*", "examples/*", "venv/*"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "archive/",
    "examples/",
    "venv/",
]